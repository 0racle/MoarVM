What next?
* Turn qast.t into an actual test harness thingy
* Implement QAST::SVal and QAST::NVal compilation (should be easy)
* Add tests for this
* Get MoarVM op argument type information generated into lib/MAST/Ops.nqp;
  we'll also need whether the operands are read or written
* Get compile_mastop to check argument types (later we'll do coerce stuff)
* Get compile_mastop to handle instructions that return a result
* Write various tests to exercise QAST::VM

Note that the QAST::VM.new(moarop => '...', ...) handling will lie at the
base of compiling many things in QAST::Op.

