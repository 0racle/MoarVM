# SYNTAX: opcode ':' s-exp
#    s-exp represents tree

# Number with dollars stand for the arguments of the opcode.  The
# opcode preprocessor inserts loads, and immediate nodes for arguments
# automatically.

const_i16:   (copy $1) 
const_i64:   (copy $1)
set:         (copy $1)
getwho:      (let (($stable (load (addr $1 (&offsetof MVMObject st)) (&sizeof MVMSTable*)))
                   ($who (load (addr $stable (&offsetof MVMSTable WHO) (&sizeof MVMObject*)))))
                   (ifelse (nz $who) $who VMNULL))
getwhat:     (load (addr (load (addr $1 (&offsetof MVMObject st)) (&sizeof MVMSTable*))
                         (&offsetof MVMSTable WHAT)) (&sizeof MVMObject*))
say:         (call (&funcptr MVM_string_say) (arglist 1 (carg $1 ptr)))
add_i:       (add $1 $2)
sp_getarg_o: (load (addr fargs $1) (&sizeof MVMObject*))
sp_getarg_i: (load (addr fargs $1) (&sizeof MVMint64))
null_s:      (imm 0 (&sizeof MVMString*))
